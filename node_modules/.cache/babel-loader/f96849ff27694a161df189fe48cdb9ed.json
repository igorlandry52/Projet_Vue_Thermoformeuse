{"remainingRequest":"C:\\Users\\ngaleu alain\\Documents\\projet\\new_projet\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ngaleu alain\\Documents\\projet\\new_projet\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\Users\\ngaleu alain\\Documents\\projet\\new_projet\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\ngaleu alain\\Documents\\projet\\new_projet\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ngaleu alain\\Documents\\projet\\new_projet\\src\\views\\logs.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ngaleu alain\\Documents\\projet\\new_projet\\src\\views\\logs.vue","mtime":1592129450085},{"path":"C:\\Users\\ngaleu alain\\Documents\\projet\\new_projet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ngaleu alain\\Documents\\projet\\new_projet\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\ngaleu alain\\Documents\\projet\\new_projet\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\ngaleu alain\\Documents\\projet\\new_projet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ngaleu alain\\Documents\\projet\\new_projet\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICByZWNoZXJjaGU6ICcnLAogICAgICBoZWFkZXJzOiBbewogICAgICAgIHRleHQ6ICJOb20gZCd1dGlsaXNhdGV1ciIsCiAgICAgICAgYWxpZ246ICdsZWZ0JywKICAgICAgICBzb3J0YWJsZTogZmFsc2UsCiAgICAgICAgdmFsdWU6ICduYW1lJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ0RhdGUnLAogICAgICAgIHZhbHVlOiAnZGF0ZScKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdFdGF0JywKICAgICAgICB2YWx1ZTogJ2V0YXQnCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnRHVyw6llIChzZWNvbmRlcyknLAogICAgICAgIHZhbHVlOiAnZHVyw6llJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ0FjdGlvbnMnLAogICAgICAgIHZhbHVlOiAnYWN0aW9ucycsCiAgICAgICAgc29ydGFibGU6IGZhbHNlCiAgICAgIH1dLAogICAgICBsb2dzOiBbXQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmluaXRpYWxpemUoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGluaXRpYWxpemU6IGZ1bmN0aW9uIGluaXRpYWxpemUoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICAgICAgZmV0Y2goImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC8iLCB7CiAgICAgICAgICBtZXRob2Q6ICJQT1NUIiwKICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KFsiZ2V0X3RlbXBfbG9nIl0pLAogICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAiQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luIjogIioiLAogICAgICAgICAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb24iCiAgICAgICAgICB9CiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTsKICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgICB2YXIgYXJyYXlEYXRhID0gW107CgogICAgICAgICAgZm9yICh2YXIga2V5IGluIGRhdGEpIHsKICAgICAgICAgICAgaWYgKGRhdGEuaGFzT3duUHJvcGVydHkoa2V5KSkgewogICAgICAgICAgICAgIHZhciBlbGVtZW50ID0gZGF0YVtrZXldOwogICAgICAgICAgICAgIGFycmF5RGF0YS5wdXNoKGVsZW1lbnQpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CgogICAgICAgICAgX3RoaXMubG9ncyA9IGFycmF5RGF0YTsKICAgICAgICB9KTsKICAgICAgfSwgMTAwKTsKICAgIH0sCiAgICBkZWxldGVJdGVtOiBmdW5jdGlvbiBkZWxldGVJdGVtKGl0ZW0pIHsKICAgICAgdmFyIGluZGV4ID0gdGhpcy5sb2dzLmluZGV4T2YoaXRlbSk7CiAgICAgIGNvbmZpcm0oJ0FyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBkZWxldGUgdGhpcyBpdGVtPycpICYmIGZldGNoKCJodHRwOi8vbG9jYWxob3N0OjMwMDAvIiwgewogICAgICAgIG1ldGhvZDogIlBPU1QiLAogICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KFsiZGVsX3RlbXBfbG9nIiwgaW5kZXhdKSwKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAiQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luIjogIioiLAogICAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIgogICAgICAgIH0KICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["logs.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmHA,eAAA;AACA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,SAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA,CACA;AACA,QAAA,IAAA,EAAA,mBADA;AAEA,QAAA,KAAA,EAAA,MAFA;AAGA,QAAA,QAAA,EAAA,KAHA;AAIA,QAAA,KAAA,EAAA;AAJA,OADA,EAOA;AAAA,QAAA,IAAA,EAAA,MAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAPA,EAQA;AAAA,QAAA,IAAA,EAAA,MAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OARA,EASA;AAAA,QAAA,IAAA,EAAA,kBAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OATA,EAUA;AAAA,QAAA,IAAA,EAAA,SAAA;AAAA,QAAA,KAAA,EAAA,SAAA;AAAA,QAAA,QAAA,EAAA;AAAA,OAVA,CAFA;AAcA,MAAA,IAAA,EAAA;AAdA,KAAA;AAAA,GADA;AAkBA,EAAA,OAlBA,qBAkBA;AACA,SAAA,UAAA;AACA,GApBA;AAsBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AAAA;;AACA,MAAA,WAAA,CAAA,YAAA;AACA,QAAA,KAAA,CAAA,wBAAA,EAAA;AACA,UAAA,MAAA,EAAA,MADA;AAEA,UAAA,IAAA,EAAA,IAAA,CAAA,SAAA,CAAA,CAAA,cAAA,CAAA,CAFA;AAGA,UAAA,OAAA,EAAA;AACA,2CAAA,GADA;AAEA,4BAAA;AAFA;AAHA,SAAA,CAAA,CAOA,IAPA,CAOA,UAAA,GAAA;AAAA,iBAAA,GAAA,CAAA,IAAA,EAAA;AAAA,SAPA,EAQA,IARA,CAQA,UAAA,IAAA,EAAA;AACA,cAAA,SAAA,GAAA,EAAA;;AACA,eAAA,IAAA,GAAA,IAAA,IAAA,EAAA;AACA,gBAAA,IAAA,CAAA,cAAA,CAAA,GAAA,CAAA,EAAA;AACA,kBAAA,OAAA,GAAA,IAAA,CAAA,GAAA,CAAA;AACA,cAAA,SAAA,CAAA,IAAA,CAAA,OAAA;AACA;AACA;;AACA,UAAA,KAAA,CAAA,IAAA,GAAA,SAAA;AACA,SAjBA;AAkBA,OAnBA,EAmBA,GAnBA,CAAA;AAoBA,KAtBA;AAwBA,IAAA,UAxBA,sBAwBA,IAxBA,EAwBA;AACA,UAAA,KAAA,GAAA,KAAA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,MAAA,OAAA,CAAA,4CAAA,CAAA,IACA,KAAA,CAAA,wBAAA,EAAA;AACA,QAAA,MAAA,EAAA,MADA;AAEA,QAAA,IAAA,EAAA,IAAA,CAAA,SAAA,CAAA,CAAA,cAAA,EAAA,KAAA,CAAA,CAFA;AAGA,QAAA,OAAA,EAAA;AACA,yCAAA,GADA;AAEA,0BAAA;AAFA;AAHA,OAAA,CAAA,CAOA,IAPA,CAOA,UAAA,GAAA;AAAA,eAAA,GAAA,CAAA,IAAA,EAAA;AAAA,OAPA,CADA;AASA;AAnCA;AAtBA,CAAA","sourcesContent":["<!-- <template>\r\n  <div class=\"elevation-1\">\r\n    <v-toolbar flat color=\"white\">\r\n      <v-toolbar-title>Historiques / Logs</v-toolbar-title>\r\n      <v-divider\r\n        class=\"mx-2\"\r\n        inset\r\n        vertical\r\n      ></v-divider>\r\n      <v-spacer></v-spacer>\r\n\t\t\t\t<v-text-field\r\n\t\t\t\t\tv-model=\"recherche\"\r\n\t\t\t\t\tappend-icon=\"mdi-magnify\"\r\n\t\t\t\t\tlabel=\"Recherche\"\r\n\t\t\t\t\tsingle-line\r\n\t\t\t\t\thide-details\r\n\t\t\t\t></v-text-field>\r\n    </v-toolbar>\r\n    <v-data-table\r\n      :headers=\"headers\"\r\n      :items=\"logs\"\r\n      :search=\"recherche\"\r\n    >\r\n      <template v-slot:items=\"props\">\r\n        <td>{{ props.item.name }}</td>\r\n        <td class=\"text-xs-right\">{{ props.item.date }}</td>\r\n        <td class=\"text-xs-right\">{{ props.item.etat }}</td>\r\n        <td class=\"text-xs-right\">{{ props.item.durée }}</td>\r\n      </template>\r\n    </v-data-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    data: () => ({\r\n      dialog: false,\r\n      recherche: '',\r\n      headers: [\r\n        {\r\n          text: \"Nom d'utilisateur\",\r\n          align: 'left',\r\n          sortable: false,\r\n          value: 'name'\r\n        },\r\n        { text: 'Date', value: 'date' },\r\n        { text: 'Etat', value: 'etat' },\r\n        { text: 'Durée (secondes)', value: 'durée' }\r\n      ],\r\n      logs: []\r\n    }),\r\n\r\n    created () {\r\n      this.initialize()\r\n    },\r\n\r\n    methods: {\r\n      initialize () {\r\n        setInterval(() => {\r\n          fetch(\"http://localhost:3000/\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify([\"get_temp_log\"]),\r\n            headers : {\r\n              \"Access-Control-Allow-Origin\": \"*\",\r\n              \"Content-Type\": \"application/json\"\r\n            }\r\n          }).then(res => res.json())\r\n          .then(data => {\r\n            this.logs = data;\r\n          });\r\n        }, 100);\r\n      }\r\n    }\r\n  }\r\n</script> -->\r\n\r\n<template>\r\n  <v-data-table\r\n    :headers=\"headers\"\r\n    :items=\"logs\"\r\n    :search=\"recherche\"\r\n    sort-by=\"durée\"\r\n    class=\"elevation-1\"\r\n  >\r\n    <template v-slot:top>\r\n      <v-toolbar flat color=\"white\">\r\n      <v-toolbar-title>Historiques / Logs</v-toolbar-title>\r\n      <v-divider\r\n        class=\"mx-2\"\r\n        inset\r\n        vertical\r\n      ></v-divider>\r\n      <v-spacer></v-spacer>\r\n\t\t\t\t<v-text-field\r\n\t\t\t\t\tv-model=\"recherche\"\r\n\t\t\t\t\tappend-icon=\"mdi-magnify\"\r\n\t\t\t\t\tlabel=\"Recherche\"\r\n\t\t\t\t\tsingle-line\r\n\t\t\t\t\thide-details\r\n\t\t\t\t></v-text-field>\r\n    </v-toolbar>\r\n    </template>\r\n    <template v-slot:item.actions=\"{ item }\">\r\n      <v-icon\r\n        small\r\n        @click=\"deleteItem(item)\"\r\n      >\r\n        mdi-delete\r\n      </v-icon>\r\n    </template>\r\n  </v-data-table>\r\n</template>\r\n\r\n\r\n<script>\r\n  export default {\r\n    data: () => ({\r\n      recherche: '',\r\n      headers: [\r\n        {\r\n          text: \"Nom d'utilisateur\",\r\n          align: 'left',\r\n          sortable: false,\r\n          value: 'name'\r\n        },\r\n        { text: 'Date', value: 'date' },\r\n        { text: 'Etat', value: 'etat' },\r\n        { text: 'Durée (secondes)', value: 'durée' },\r\n        { text: 'Actions', value: 'actions', sortable: false },\r\n      ],\r\n      logs: []\r\n    }),\r\n\r\n    created () {\r\n      this.initialize()\r\n    },\r\n\r\n    methods: {\r\n      initialize () {\r\n        setInterval(() => {\r\n          fetch(\"http://localhost:3000/\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify([\"get_temp_log\"]),\r\n            headers : {\r\n              \"Access-Control-Allow-Origin\": \"*\",\r\n              \"Content-Type\": \"application/json\"\r\n            }\r\n          }).then(res => res.json())\r\n          .then(data => {\r\n            let arrayData = [];\r\n            for (const key in data) {\r\n              if (data.hasOwnProperty(key)) {\r\n                const element = data[key];\r\n                arrayData.push(element); \r\n              }\r\n            }\r\n            this.logs = arrayData;\r\n          });\r\n        }, 100);\r\n      },\r\n\r\n      deleteItem (item) {\r\n        const index = this.logs.indexOf(item);\r\n        confirm('Are you sure you want to delete this item?') && \r\n        fetch(\"http://localhost:3000/\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify([\"del_temp_log\", index]),\r\n            headers : {\r\n              \"Access-Control-Allow-Origin\": \"*\",\r\n              \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(res => res.json());\r\n      }\r\n    },\r\n  }\r\n</script>"],"sourceRoot":"src/views"}]}