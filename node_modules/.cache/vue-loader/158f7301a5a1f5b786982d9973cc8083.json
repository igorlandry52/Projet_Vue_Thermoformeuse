{"remainingRequest":"C:\\Users\\ngaleu alain\\Documents\\projet\\new_projet\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ngaleu alain\\Documents\\projet\\new_projet\\src\\views\\visualisation.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\ngaleu alain\\Documents\\projet\\new_projet\\src\\views\\visualisation.vue","mtime":1592146721709},{"path":"C:\\Users\\ngaleu alain\\Documents\\projet\\new_projet\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ngaleu alain\\Documents\\projet\\new_projet\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\ngaleu alain\\Documents\\projet\\new_projet\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\ngaleu alain\\Documents\\projet\\new_projet\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\ngaleu alain\\Documents\\projet\\new_projet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ngaleu alain\\Documents\\projet\\new_projet\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCmJvZHkgew0KICBtYXJnaW46IDEwcHggMCAwIDEwcHg7DQp9DQoudmlzdWFsaXNhdGlvbiB7DQogIG1hcmdpbi10b3A6IDIwcHg7DQogIG1heC13aWR0aDogMTAyMHB4Ow0KICBtYXJnaW46IDAgYXV0bzsNCn0NCi5ncmlkIHsNCiAgZGlzcGxheTogZ3JpZDsNCiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMiwgMzAwcHgpOw0KICBncmlkLWdhcDogMjBweDsNCn0NCi52LXNoZWV0LS1vZmZzZXQgew0KICBoZWlnaHQ6IDM3MHB4Ow0KICB0b3A6IC0yNHB4Ow0KICBwb3NpdGlvbjogcmVsYXRpdmU7DQp9DQoudGV4dC0tcHJpbWFyeSB7DQogIHdpZHRoOiAxNjBweDsNCn0NCg=="},{"version":3,"sources":["visualisation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"visualisation.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"visualisation\">\r\n    <v-row>\r\n      <v-col cols=\"6\">\r\n        <v-card\r\n          class=\"mt-6\"\r\n          max-width=\"500\"\r\n        >\r\n          <v-sheet\r\n            class=\"v-sheet--offset mx-auto pb-0\"\r\n            color=\"light-blue accent-1\"\r\n            elevation=\"12\"\r\n            max-width=\"calc(100% - 32px)\"\r\n          >\r\n            <bar-chart :data=\"dataChart\" width=\"430\" height=\"400\" :ok=\"value\" />\r\n          </v-sheet>\r\n\r\n          <v-card-text class=\"pt-0\">\r\n            <div class=\"title font-weight-light mb-2\">Temperature visualisation</div>\r\n            <div class=\"subheading font-weight-light grey--text\">Evolution des températures des 6 zones de chauffes</div>\r\n            <v-divider class=\"my-2\"></v-divider>\r\n            <v-icon\r\n              class=\"mr-2\"\r\n              small\r\n            >\r\n              mdi-clock\r\n            </v-icon>\r\n            <span class=\"caption grey--text font-weight-light\">dernière utilisation : {{dateUser}}</span>\r\n          </v-card-text>\r\n        </v-card>\r\n      </v-col>\r\n\r\n      <v-col cols=\"6\">\r\n        <v-card\r\n          max-width=\"300\"\r\n        >\r\n          <v-card-text>\r\n            <div class=\"title font-weight-light mb-2\">Paramètres (*)</div>\r\n            <v-divider class=\"my-2\"></v-divider>\r\n            <div class=\"text--primary\" >\r\n              <v-select\r\n                v-model=\"selectedUser\"\r\n                :items=\"config\"\r\n                label=\"Config. User\"></v-select>\r\n              <v-select\r\n                v-model=\"selectedTime\"\r\n                :items=\"temps\"\r\n                label=\"Durée en Seconde\"></v-select>\r\n            </div>\r\n            <div class=\"title font-weight-light mb-2 mt-10\">Marche/Arrêt</div>\r\n            <v-divider class=\"my-2 mb-4\"></v-divider>\r\n            <div class=\"btn--marche\">\r\n              <v-btn\r\n                @click=\"marche\" \r\n                x-large\r\n                v-bind:disabled=\"selectedUser !== '' && selectedTime !== 0 ? false : true\" \r\n                v-bind:color=\"value === 0 ? 'success' : 'error'\">\r\n                <v-icon x-large color=\"black\">mdi-power</v-icon>\r\n              </v-btn>\r\n            </div>\r\n              <template v-if=\"pret\">\r\n                <v-alert\r\n                  dense\r\n                  text\r\n                  type=\"success\"\r\n                  border=\"left\"\r\n                  class=\"mx-4 mt-3\"\r\n                >\r\n                  Prêt !!!\r\n                </v-alert>\r\n              </template>\r\n          </v-card-text>\r\n        </v-card>\r\n      </v-col>\r\n    </v-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport BarChart from '@/components/BarChart.vue';\r\n\r\n\r\nlet data = [\r\n  {\r\n    x: 1,\r\n    y: 0\r\n  },\r\n  {\r\n    x: 2,\r\n    y: 0\r\n  },\r\n  {\r\n    x: 3,\r\n    y: 0\r\n  },\r\n  {\r\n    x: 4,\r\n    y: 0\r\n  },\r\n  {\r\n    x: 5,\r\n    y: 0\r\n  },\r\n  {\r\n    x: 6,\r\n    y: 0\r\n  }\r\n];\r\nlet setupTime = 0;\r\nlet arret = 0;\r\nlet user = [];\r\nsetInterval(() => {\r\n  fetch(\"http://localhost:3000/\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify([\"get_temp\"]),\r\n    headers : {\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  }).then(res => res.json())\r\n  .then(data => {\r\n    const copyUser = [];\r\n    data.forEach(element => {\r\n      copyUser.push(element.name);\r\n    });\r\n    [...user] = copyUser;\r\n  });\r\n}, 10);\r\n\r\n\r\nexport default {\r\n  name: 'visualisation',\r\n  data() {\r\n    return {\r\n      dataChart: data,\r\n      value: 0,\r\n      pret: false,\r\n      id: 0,\r\n      dateUser: null,\r\n      selectedUser: '',\r\n      selectedTime: 0,\r\n      config: user,\r\n      temps: [ 40, 50, 60, 70, 80, 90 ]\r\n    };\r\n  },\r\n  \r\n  components: {\r\n    BarChart\r\n  },\r\n  methods: {\r\n    marche (){\r\n      this.dateUser = (new Date()).toLocaleDateString(\"fr-FR\",{\r\n                  weekday: \"long\",\r\n                  day: \"numeric\",\r\n                  month: \"long\",\r\n                  year: \"numeric\",\r\n                  hour: \"numeric\",\r\n                  minute: \"numeric\",\r\n                  second: \"numeric\"\r\n                });\r\n      this.value = 1;\r\n      let temp = [];\r\n      fetch(\"http://localhost:3000/\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify([\"get_temp\"]),\r\n        headers : {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      }).then(async res => await res.json())\r\n      .then(async data => {\r\n        await data.forEach(element => {\r\n          if(element.name === this.selectedUser) {\r\n            for (const key in element) {\r\n              if (element.hasOwnProperty(key)) {\r\n                if(key != \"name\") temp.push(element[key]);\r\n              }\r\n            }\r\n          }\r\n        });\r\n      });\r\n      \r\n      fetch(\"http://localhost:3000/\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify([\"start\", this.selectedUser, this.selectedTime]),\r\n        headers : {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      }).then(async res => await res.json())\r\n      // .then(async data => {\r\n\r\n      // });\r\n      \r\n      if(this.selectedTime > 0) setupTime = 1000*this.selectedTime;\r\n      else setupTime = 40000; \r\n      setTimeout(() => {\r\n        const copyTemp = [...temp];\r\n        const tempMax = Math.max(...copyTemp)/2;\r\n        let waitTime;\r\n        if(Math.max(...copyTemp) > 100) waitTime = tempMax*100 + 1000;\r\n        else if(Math.max(...copyTemp) < 20) waitTime = tempMax*1000;\r\n        else waitTime = Math.max(...copyTemp)*100;\r\n        const upIntervale = setInterval(() => {\r\n          if(arret === 0) {\r\n            for (let index = 0; index < data.length; index++) {\r\n              if( data[index].y < temp[index]) data[index].y += 2;\r\n              else data[index].y -= 2;\r\n            }\r\n          } \r\n        }, 100);\r\n      \r\n        setTimeout(() => {\r\n          arret = 1;\r\n          const downInterval = setInterval(() => {\r\n            if(arret === 1) {\r\n              for (let index = 0; index < data.length; index++) {\r\n                if( data[index].y > 0) {\r\n                  data[index].y -= copyTemp[index]/tempMax;\r\n                }      \r\n              }\r\n            }     \r\n          }, 100);\r\n          setTimeout(() => {\r\n            arret = 0;\r\n            this.pret = true;\r\n            this.value = 0;\r\n            this.selectedUser = '';\r\n            this.selectedTime = 0;\r\n            clearInterval(upIntervale);\r\n            clearInterval(downInterval);\r\n            setTimeout(() => { \r\n              this.pret = false;\r\n            }, 5000);\r\n          }, waitTime);\r\n        }, setupTime); \r\n      }, 100);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\nbody {\r\n  margin: 10px 0 0 10px;\r\n}\r\n.visualisation {\r\n  margin-top: 20px;\r\n  max-width: 1020px;\r\n  margin: 0 auto;\r\n}\r\n.grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 300px);\r\n  grid-gap: 20px;\r\n}\r\n.v-sheet--offset {\r\n  height: 370px;\r\n  top: -24px;\r\n  position: relative;\r\n}\r\n.text--primary {\r\n  width: 160px;\r\n}\r\n</style>"]}]}